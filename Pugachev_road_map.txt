План работ.

1. Создать класс Person c 3-мя полями, реализовать в нем пттерн Билдер.
2. Реализовать консольный интерфейс (наверное через reader.readLine()). Он должен быть в цикле,
    реализовать паттерн стратгия. (Пугачев)

    Пункты меню: 1) Заполнние исходного массива
                    1.1) Из файла (размер коллекции равен количеству персон в файле)
                         1.1.1) Укажите путь к файлу (нужно подготовить демо файл)

                    1.2) Рандомно (нужно подготовить примрно по 10 вариантов каждого
                         текстового поля, если будт числовое поле можно рамдомно брать из пределов)
                         1.2.1) Каким количеством объектов заполнить коллекцию?

                    1.3) Заполнить вручную. Введите поля объекта через запятую пробел и нажмите Enter.
                         Введите "/END" когда закончите (Здесь парсить строку вида {Иванов, Иван, 2010}
                         и каждый раз проверять усдловие выхода)
                 2) Отсортировать массив. (Передать массив в метод сортировщик. Наверное вывести в консоль
                    отсортрованную коллекцию)
                 3) Найти (Здесь нужно спарсить строку и передать методу, реализующему поиск. Вывести все
                    найденые результаты)
                 4) Выход из программы "/EXIT" (Выход из цикла)

3. Реализовать сортировку с дженериками по всем 3 полям. Сортировка должна выполняться в ThreadPool и быть выполнена
    в несколько потоков (минимум 2).
4. Реализовать бинарный поиск с дженериками. (Григорьев)
5. Реализовать парсер (с валидацией) из строки/файла в объекты класса. (Рудомётова)
6. Реализовать механизм рандомного заполнения коллекции.
7. Реализовать тесты.


Дополнительное задание 1:
дополнительно к основным сортировкам реализовать эти же алгоритмы
сортировки таким образом, что объекты классов будут сортироваться по какому-либо числовому
полю: объекты с четными значениями этого поля должны быть отсортированы в натуральном
порядке, а с нечетными – оставаться на исходных позициях.

Дополнительное задание 2:
реализовать функционал для записи отсортированных коллекций/
найденных значений в файл в режиме добавления данных.

Дополнительное задание 3:
заполнение коллекций должно осуществляться посредством стримов.
3* Коллекции для заполнения должны быть кастомными.

Дополнительное задание 4:
реализовать многопоточный метод, подсчитывающий
количество вхождений элемента N в коллекцию и выводящий результат в консоль.